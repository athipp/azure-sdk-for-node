/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * Profiles
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the CdnManagementClient.
 */
export interface Profiles {

    /**
     * Lists all the CDN profiles within an Azure subscription.
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProfileListResult>): void;
    list(callback: ServiceCallback<models.ProfileListResult>): void;

    /**
     * Lists all the CDN profiles within a resource group.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listByResourceGroup(resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProfileListResult>): void;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.ProfileListResult>): void;

    /**
     * Gets a CDN profile with the specified profile name under the specified
     * subscription and resource group.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    get(resourceGroupName: string, profileName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Profile>): void;
    get(resourceGroupName: string, profileName: string, callback: ServiceCallback<models.Profile>): void;

    /**
     * Creates a new CDN profile with a profile name under the specified
     * subscription and resource group.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {object} profile Profile properties needed to create a new profile.
     * 
     * @param {object} profile.sku The SKU (pricing tier) of the CDN profile.
     * 
     * @param {string} [profile.sku.name] Name of the pricing tier. Possible
     * values include: 'Standard_Verizon', 'Premium_Verizon', 'Custom_Verizon',
     * 'Standard_Akamai', 'Standard_ChinaCdn'
     * 
     * @param {string} profile.location Resource location.
     * 
     * @param {object} [profile.tags] Resource tags.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    create(resourceGroupName: string, profileName: string, profile: models.Profile, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Profile>): void;
    create(resourceGroupName: string, profileName: string, profile: models.Profile, callback: ServiceCallback<models.Profile>): void;

    /**
     * Creates a new CDN profile with a profile name under the specified
     * subscription and resource group.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {object} profile Profile properties needed to create a new profile.
     * 
     * @param {object} profile.sku The SKU (pricing tier) of the CDN profile.
     * 
     * @param {string} [profile.sku.name] Name of the pricing tier. Possible
     * values include: 'Standard_Verizon', 'Premium_Verizon', 'Custom_Verizon',
     * 'Standard_Akamai', 'Standard_ChinaCdn'
     * 
     * @param {string} profile.location Resource location.
     * 
     * @param {object} [profile.tags] Resource tags.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginCreate(resourceGroupName: string, profileName: string, profile: models.Profile, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Profile>): void;
    beginCreate(resourceGroupName: string, profileName: string, profile: models.Profile, callback: ServiceCallback<models.Profile>): void;

    /**
     * Updates an existing CDN profile with the specified profile name under the
     * specified subscription and resource group.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {object} tags Profile tags
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    update(resourceGroupName: string, profileName: string, tags: { [propertyName: string]: string }, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Profile>): void;
    update(resourceGroupName: string, profileName: string, tags: { [propertyName: string]: string }, callback: ServiceCallback<models.Profile>): void;

    /**
     * Updates an existing CDN profile with the specified profile name under the
     * specified subscription and resource group.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {object} tags Profile tags
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginUpdate(resourceGroupName: string, profileName: string, tags: { [propertyName: string]: string }, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Profile>): void;
    beginUpdate(resourceGroupName: string, profileName: string, tags: { [propertyName: string]: string }, callback: ServiceCallback<models.Profile>): void;

    /**
     * Deletes an existing CDN profile with the specified parameters. Deleting a
     * profile will result in the deletion of all subresources including
     * endpoints, origins and custom domains.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    deleteMethod(resourceGroupName: string, profileName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, profileName: string, callback: ServiceCallback<void>): void;

    /**
     * Deletes an existing CDN profile with the specified parameters. Deleting a
     * profile will result in the deletion of all subresources including
     * endpoints, origins and custom domains.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginDeleteMethod(resourceGroupName: string, profileName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    beginDeleteMethod(resourceGroupName: string, profileName: string, callback: ServiceCallback<void>): void;

    /**
     * Generates a dynamic SSO URI used to sign in to the CDN supplemental portal.
     * Supplemnetal portal is used to configure advanced feature capabilities
     * that are not yet available in the Azure portal, such as core reports in a
     * standard profile; rules engine, advanced HTTP reports, and real-time stats
     * and alerts in a premium profile. The SSO URI changes approximately every
     * 10 minutes.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    generateSsoUri(resourceGroupName: string, profileName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SsoUri>): void;
    generateSsoUri(resourceGroupName: string, profileName: string, callback: ServiceCallback<models.SsoUri>): void;

    /**
     * Lists all the CDN profiles within an Azure subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProfileListResult>): void;
    listNext(nextPageLink: string, callback: ServiceCallback<models.ProfileListResult>): void;

    /**
     * Lists all the CDN profiles within a resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listByResourceGroupNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProfileListResult>): void;
    listByResourceGroupNext(nextPageLink: string, callback: ServiceCallback<models.ProfileListResult>): void;
}

/**
 * @class
 * Endpoints
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the CdnManagementClient.
 */
export interface Endpoints {

    /**
     * Lists existing CDN endpoints.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listByProfile(resourceGroupName: string, profileName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.EndpointListResult>): void;
    listByProfile(resourceGroupName: string, profileName: string, callback: ServiceCallback<models.EndpointListResult>): void;

    /**
     * Gets an existing CDN endpoint with the specified endpoint name under the
     * specified subscription, resource group and profile.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {string} endpointName Name of the endpoint under the profile which
     * is unique globally.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    get(resourceGroupName: string, profileName: string, endpointName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Endpoint>): void;
    get(resourceGroupName: string, profileName: string, endpointName: string, callback: ServiceCallback<models.Endpoint>): void;

    /**
     * Creates a new CDN endpoint with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {string} endpointName Name of the endpoint under the profile which
     * is unique globally.
     * 
     * @param {object} endpoint Endpoint properties
     * 
     * @param {string} [endpoint.originHostHeader] The host header the CDN
     * provider will send along with content requests to origins. The default
     * value is the host name of the origin.
     * 
     * @param {string} [endpoint.originPath] The path used for origin requests.
     * 
     * @param {array} [endpoint.contentTypesToCompress] List of content types on
     * which compression will be applied. The value for the elements should be a
     * valid MIME type.
     * 
     * @param {boolean} [endpoint.isCompressionEnabled] Indicates whether content
     * compression is enabled. The default value is false. If compression is
     * enabled, the content transferred from the CDN endpoint to the end user
     * will be compressed. The requested content must be larger than 1 byte and
     * smaller than 1 MB.
     * 
     * @param {boolean} [endpoint.isHttpAllowed] Indicates whether HTTP traffic is
     * allowed on the endpoint. Default value is true. At least one protocol
     * (HTTP or HTTPS) must be allowed.
     * 
     * @param {boolean} [endpoint.isHttpsAllowed] Indicates whether HTTPS traffic
     * is allowed on the endpoint. Default value is true. At least one protocol
     * (HTTP or HTTPS) must be allowed.
     * 
     * @param {string} [endpoint.queryStringCachingBehavior] Defines the query
     * string caching behavior. Possible values include: 'IgnoreQueryString',
     * 'BypassCaching', 'UseQueryString', 'NotSet'
     * 
     * @param {string} [endpoint.optimizationType] Customer can specify what
     * scenario they want this CDN endpoint to optimize. (e.g. Download, Media
     * services, and etc.) With this information we can apply scenario driven
     * optimization.
     * 
     * @param {array} [endpoint.geoFilters] The list of geo filters for the CDN
     * endpoint.
     * 
     * @param {array} endpoint.origins The set of origins for the CDN endpoint.
     * When multiple origins exist, the first origin will be used as primary and
     * rest will be used as failover options.
     * 
     * @param {string} endpoint.location Resource location.
     * 
     * @param {object} [endpoint.tags] Resource tags.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    create(resourceGroupName: string, profileName: string, endpointName: string, endpoint: models.Endpoint, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Endpoint>): void;
    create(resourceGroupName: string, profileName: string, endpointName: string, endpoint: models.Endpoint, callback: ServiceCallback<models.Endpoint>): void;

    /**
     * Creates a new CDN endpoint with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {string} endpointName Name of the endpoint under the profile which
     * is unique globally.
     * 
     * @param {object} endpoint Endpoint properties
     * 
     * @param {string} [endpoint.originHostHeader] The host header the CDN
     * provider will send along with content requests to origins. The default
     * value is the host name of the origin.
     * 
     * @param {string} [endpoint.originPath] The path used for origin requests.
     * 
     * @param {array} [endpoint.contentTypesToCompress] List of content types on
     * which compression will be applied. The value for the elements should be a
     * valid MIME type.
     * 
     * @param {boolean} [endpoint.isCompressionEnabled] Indicates whether content
     * compression is enabled. The default value is false. If compression is
     * enabled, the content transferred from the CDN endpoint to the end user
     * will be compressed. The requested content must be larger than 1 byte and
     * smaller than 1 MB.
     * 
     * @param {boolean} [endpoint.isHttpAllowed] Indicates whether HTTP traffic is
     * allowed on the endpoint. Default value is true. At least one protocol
     * (HTTP or HTTPS) must be allowed.
     * 
     * @param {boolean} [endpoint.isHttpsAllowed] Indicates whether HTTPS traffic
     * is allowed on the endpoint. Default value is true. At least one protocol
     * (HTTP or HTTPS) must be allowed.
     * 
     * @param {string} [endpoint.queryStringCachingBehavior] Defines the query
     * string caching behavior. Possible values include: 'IgnoreQueryString',
     * 'BypassCaching', 'UseQueryString', 'NotSet'
     * 
     * @param {string} [endpoint.optimizationType] Customer can specify what
     * scenario they want this CDN endpoint to optimize. (e.g. Download, Media
     * services, and etc.) With this information we can apply scenario driven
     * optimization.
     * 
     * @param {array} [endpoint.geoFilters] The list of geo filters for the CDN
     * endpoint.
     * 
     * @param {array} endpoint.origins The set of origins for the CDN endpoint.
     * When multiple origins exist, the first origin will be used as primary and
     * rest will be used as failover options.
     * 
     * @param {string} endpoint.location Resource location.
     * 
     * @param {object} [endpoint.tags] Resource tags.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginCreate(resourceGroupName: string, profileName: string, endpointName: string, endpoint: models.Endpoint, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Endpoint>): void;
    beginCreate(resourceGroupName: string, profileName: string, endpointName: string, endpoint: models.Endpoint, callback: ServiceCallback<models.Endpoint>): void;

    /**
     * Updates an existing CDN endpoint with the specified parameters. Only tags
     * and OriginHostHeader can be updated after creating an endpoint. To update
     * origins, use the Update Origin operation. To update custom domains, use
     * the Update Custom Domain operation.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {string} endpointName Name of the endpoint under the profile which
     * is unique globally.
     * 
     * @param {object} endpointUpdateProperties Endpoint update properties
     * 
     * @param {object} [endpointUpdateProperties.tags] Endpoint tags.
     * 
     * @param {string} [endpointUpdateProperties.originHostHeader] The host header
     * the CDN provider will send along with content requests to origins. The
     * default value is the host name of the origin.
     * 
     * @param {string} [endpointUpdateProperties.originPath] The path used for
     * origin requests.
     * 
     * @param {array} [endpointUpdateProperties.contentTypesToCompress] List of
     * content types on which compression will be applied. The value for the
     * elements should be a valid MIME type.
     * 
     * @param {boolean} [endpointUpdateProperties.isCompressionEnabled] Indicates
     * whether content compression is enabled. The default value is false. If
     * compression is enabled, the content transferred from the CDN endpoint to
     * the end user will be compressed. The requested content must be larger than
     * 1 byte and smaller than 1 MB.
     * 
     * @param {boolean} [endpointUpdateProperties.isHttpAllowed] Indicates whether
     * HTTP traffic is allowed on the endpoint. Default value is true. At least
     * one protocol (HTTP or HTTPS) must be allowed.
     * 
     * @param {boolean} [endpointUpdateProperties.isHttpsAllowed] Indicates
     * whether HTTPS traffic is allowed on the endpoint. Default value is true.
     * At least one protocol (HTTP or HTTPS) must be allowed.
     * 
     * @param {string} [endpointUpdateProperties.queryStringCachingBehavior]
     * Defines the query string caching behavior. Possible values include:
     * 'IgnoreQueryString', 'BypassCaching', 'UseQueryString', 'NotSet'
     * 
     * @param {string} [endpointUpdateProperties.optimizationType] Customer can
     * specify what scenario they want this CDN endpoint to optimize. (e.g.
     * Download, Media services, and etc.) With this information we can apply
     * scenario driven optimization.
     * 
     * @param {array} [endpointUpdateProperties.geoFilters] The list of geo
     * filters for the CDN endpoint.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    update(resourceGroupName: string, profileName: string, endpointName: string, endpointUpdateProperties: models.EndpointUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Endpoint>): void;
    update(resourceGroupName: string, profileName: string, endpointName: string, endpointUpdateProperties: models.EndpointUpdateParameters, callback: ServiceCallback<models.Endpoint>): void;

    /**
     * Updates an existing CDN endpoint with the specified parameters. Only tags
     * and OriginHostHeader can be updated after creating an endpoint. To update
     * origins, use the Update Origin operation. To update custom domains, use
     * the Update Custom Domain operation.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {string} endpointName Name of the endpoint under the profile which
     * is unique globally.
     * 
     * @param {object} endpointUpdateProperties Endpoint update properties
     * 
     * @param {object} [endpointUpdateProperties.tags] Endpoint tags.
     * 
     * @param {string} [endpointUpdateProperties.originHostHeader] The host header
     * the CDN provider will send along with content requests to origins. The
     * default value is the host name of the origin.
     * 
     * @param {string} [endpointUpdateProperties.originPath] The path used for
     * origin requests.
     * 
     * @param {array} [endpointUpdateProperties.contentTypesToCompress] List of
     * content types on which compression will be applied. The value for the
     * elements should be a valid MIME type.
     * 
     * @param {boolean} [endpointUpdateProperties.isCompressionEnabled] Indicates
     * whether content compression is enabled. The default value is false. If
     * compression is enabled, the content transferred from the CDN endpoint to
     * the end user will be compressed. The requested content must be larger than
     * 1 byte and smaller than 1 MB.
     * 
     * @param {boolean} [endpointUpdateProperties.isHttpAllowed] Indicates whether
     * HTTP traffic is allowed on the endpoint. Default value is true. At least
     * one protocol (HTTP or HTTPS) must be allowed.
     * 
     * @param {boolean} [endpointUpdateProperties.isHttpsAllowed] Indicates
     * whether HTTPS traffic is allowed on the endpoint. Default value is true.
     * At least one protocol (HTTP or HTTPS) must be allowed.
     * 
     * @param {string} [endpointUpdateProperties.queryStringCachingBehavior]
     * Defines the query string caching behavior. Possible values include:
     * 'IgnoreQueryString', 'BypassCaching', 'UseQueryString', 'NotSet'
     * 
     * @param {string} [endpointUpdateProperties.optimizationType] Customer can
     * specify what scenario they want this CDN endpoint to optimize. (e.g.
     * Download, Media services, and etc.) With this information we can apply
     * scenario driven optimization.
     * 
     * @param {array} [endpointUpdateProperties.geoFilters] The list of geo
     * filters for the CDN endpoint.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginUpdate(resourceGroupName: string, profileName: string, endpointName: string, endpointUpdateProperties: models.EndpointUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Endpoint>): void;
    beginUpdate(resourceGroupName: string, profileName: string, endpointName: string, endpointUpdateProperties: models.EndpointUpdateParameters, callback: ServiceCallback<models.Endpoint>): void;

    /**
     * Deletes an existing CDN endpoint with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {string} endpointName Name of the endpoint under the profile which
     * is unique globally.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    deleteMethod(resourceGroupName: string, profileName: string, endpointName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, profileName: string, endpointName: string, callback: ServiceCallback<void>): void;

    /**
     * Deletes an existing CDN endpoint with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {string} endpointName Name of the endpoint under the profile which
     * is unique globally.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginDeleteMethod(resourceGroupName: string, profileName: string, endpointName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    beginDeleteMethod(resourceGroupName: string, profileName: string, endpointName: string, callback: ServiceCallback<void>): void;

    /**
     * Starts an existing stopped CDN endpoint.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {string} endpointName Name of the endpoint under the profile which
     * is unique globally.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    start(resourceGroupName: string, profileName: string, endpointName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Endpoint>): void;
    start(resourceGroupName: string, profileName: string, endpointName: string, callback: ServiceCallback<models.Endpoint>): void;

    /**
     * Starts an existing stopped CDN endpoint.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {string} endpointName Name of the endpoint under the profile which
     * is unique globally.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginStart(resourceGroupName: string, profileName: string, endpointName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Endpoint>): void;
    beginStart(resourceGroupName: string, profileName: string, endpointName: string, callback: ServiceCallback<models.Endpoint>): void;

    /**
     * Stops an existing running CDN endpoint.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {string} endpointName Name of the endpoint under the profile which
     * is unique globally.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    stop(resourceGroupName: string, profileName: string, endpointName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Endpoint>): void;
    stop(resourceGroupName: string, profileName: string, endpointName: string, callback: ServiceCallback<models.Endpoint>): void;

    /**
     * Stops an existing running CDN endpoint.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {string} endpointName Name of the endpoint under the profile which
     * is unique globally.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginStop(resourceGroupName: string, profileName: string, endpointName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Endpoint>): void;
    beginStop(resourceGroupName: string, profileName: string, endpointName: string, callback: ServiceCallback<models.Endpoint>): void;

    /**
     * Forcibly purges CDN endpoint content.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {string} endpointName Name of the endpoint under the profile which
     * is unique globally.
     * 
     * @param {array} contentPaths The path to the content to be purged. Can
     * describe a file path or a wild card directory.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    purgeContent(resourceGroupName: string, profileName: string, endpointName: string, contentPaths: string[], options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    purgeContent(resourceGroupName: string, profileName: string, endpointName: string, contentPaths: string[], callback: ServiceCallback<void>): void;

    /**
     * Forcibly purges CDN endpoint content.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {string} endpointName Name of the endpoint under the profile which
     * is unique globally.
     * 
     * @param {array} contentPaths The path to the content to be purged. Can
     * describe a file path or a wild card directory.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginPurgeContent(resourceGroupName: string, profileName: string, endpointName: string, contentPaths: string[], options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    beginPurgeContent(resourceGroupName: string, profileName: string, endpointName: string, contentPaths: string[], callback: ServiceCallback<void>): void;

    /**
     * Forcibly pre-loads CDN endpoint content. Available for Verizon Profiles.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {string} endpointName Name of the endpoint under the profile which
     * is unique globally.
     * 
     * @param {array} contentPaths The path to the content to be loaded. Should
     * describe a file path.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    loadContent(resourceGroupName: string, profileName: string, endpointName: string, contentPaths: string[], options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    loadContent(resourceGroupName: string, profileName: string, endpointName: string, contentPaths: string[], callback: ServiceCallback<void>): void;

    /**
     * Forcibly pre-loads CDN endpoint content. Available for Verizon Profiles.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {string} endpointName Name of the endpoint under the profile which
     * is unique globally.
     * 
     * @param {array} contentPaths The path to the content to be loaded. Should
     * describe a file path.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginLoadContent(resourceGroupName: string, profileName: string, endpointName: string, contentPaths: string[], options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    beginLoadContent(resourceGroupName: string, profileName: string, endpointName: string, contentPaths: string[], callback: ServiceCallback<void>): void;

    /**
     * Validates a custom domain mapping to ensure it maps to the correct CNAME in
     * DNS.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {string} endpointName Name of the endpoint under the profile which
     * is unique globally.
     * 
     * @param {string} hostName The host name of the custom domain. Must be a
     * domain name.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    validateCustomDomain(resourceGroupName: string, profileName: string, endpointName: string, hostName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ValidateCustomDomainOutput>): void;
    validateCustomDomain(resourceGroupName: string, profileName: string, endpointName: string, hostName: string, callback: ServiceCallback<models.ValidateCustomDomainOutput>): void;

    /**
     * Lists existing CDN endpoints.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listByProfileNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.EndpointListResult>): void;
    listByProfileNext(nextPageLink: string, callback: ServiceCallback<models.EndpointListResult>): void;
}

/**
 * @class
 * Origins
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the CdnManagementClient.
 */
export interface Origins {

    /**
     * Lists the existing CDN origins within an endpoint.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {string} endpointName Name of the endpoint under the profile which
     * is unique globally.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listByEndpoint(resourceGroupName: string, profileName: string, endpointName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OriginListResult>): void;
    listByEndpoint(resourceGroupName: string, profileName: string, endpointName: string, callback: ServiceCallback<models.OriginListResult>): void;

    /**
     * Gets an existing CDN origin within an endpoint.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {string} endpointName Name of the endpoint under the profile which
     * is unique globally.
     * 
     * @param {string} originName Name of the origin which is unique within the
     * endpoint.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    get(resourceGroupName: string, profileName: string, endpointName: string, originName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Origin>): void;
    get(resourceGroupName: string, profileName: string, endpointName: string, originName: string, callback: ServiceCallback<models.Origin>): void;

    /**
     * Updates an existing CDN origin within an endpoint.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {string} endpointName Name of the endpoint under the profile which
     * is unique globally.
     * 
     * @param {string} originName Name of the origin which is unique within the
     * endpoint.
     * 
     * @param {object} originUpdateProperties Origin properties
     * 
     * @param {string} [originUpdateProperties.hostName] The address of the
     * origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.
     * 
     * @param {number} [originUpdateProperties.httpPort] The value of the HTTP
     * port. Must be between 1 and 65535.
     * 
     * @param {number} [originUpdateProperties.httpsPort] The value of the HTTPS
     * port. Must be between 1 and 65535.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    update(resourceGroupName: string, profileName: string, endpointName: string, originName: string, originUpdateProperties: models.OriginUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Origin>): void;
    update(resourceGroupName: string, profileName: string, endpointName: string, originName: string, originUpdateProperties: models.OriginUpdateParameters, callback: ServiceCallback<models.Origin>): void;

    /**
     * Updates an existing CDN origin within an endpoint.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {string} endpointName Name of the endpoint under the profile which
     * is unique globally.
     * 
     * @param {string} originName Name of the origin which is unique within the
     * endpoint.
     * 
     * @param {object} originUpdateProperties Origin properties
     * 
     * @param {string} [originUpdateProperties.hostName] The address of the
     * origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.
     * 
     * @param {number} [originUpdateProperties.httpPort] The value of the HTTP
     * port. Must be between 1 and 65535.
     * 
     * @param {number} [originUpdateProperties.httpsPort] The value of the HTTPS
     * port. Must be between 1 and 65535.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginUpdate(resourceGroupName: string, profileName: string, endpointName: string, originName: string, originUpdateProperties: models.OriginUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Origin>): void;
    beginUpdate(resourceGroupName: string, profileName: string, endpointName: string, originName: string, originUpdateProperties: models.OriginUpdateParameters, callback: ServiceCallback<models.Origin>): void;

    /**
     * Lists the existing CDN origins within an endpoint.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listByEndpointNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OriginListResult>): void;
    listByEndpointNext(nextPageLink: string, callback: ServiceCallback<models.OriginListResult>): void;
}

/**
 * @class
 * CustomDomains
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the CdnManagementClient.
 */
export interface CustomDomains {

    /**
     * Lists the existing CDN custom domains within an endpoint.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {string} endpointName Name of the endpoint under the profile which
     * is unique globally.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listByEndpoint(resourceGroupName: string, profileName: string, endpointName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomDomainListResult>): void;
    listByEndpoint(resourceGroupName: string, profileName: string, endpointName: string, callback: ServiceCallback<models.CustomDomainListResult>): void;

    /**
     * Gets an existing CDN custom domain within an endpoint.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {string} endpointName Name of the endpoint under the profile which
     * is unique globally.
     * 
     * @param {string} customDomainName Name of the custom domain within an
     * endpoint.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    get(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomDomain>): void;
    get(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, callback: ServiceCallback<models.CustomDomain>): void;

    /**
     * Creates a new CDN custom domain within an endpoint.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {string} endpointName Name of the endpoint under the profile which
     * is unique globally.
     * 
     * @param {string} customDomainName Name of the custom domain within an
     * endpoint.
     * 
     * @param {string} hostName The host name of the custom domain. Must be a
     * domain name.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    create(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, hostName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomDomain>): void;
    create(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, hostName: string, callback: ServiceCallback<models.CustomDomain>): void;

    /**
     * Creates a new CDN custom domain within an endpoint.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {string} endpointName Name of the endpoint under the profile which
     * is unique globally.
     * 
     * @param {string} customDomainName Name of the custom domain within an
     * endpoint.
     * 
     * @param {string} hostName The host name of the custom domain. Must be a
     * domain name.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginCreate(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, hostName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomDomain>): void;
    beginCreate(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, hostName: string, callback: ServiceCallback<models.CustomDomain>): void;

    /**
     * Deletes an existing CDN custom domain within an endpoint.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {string} endpointName Name of the endpoint under the profile which
     * is unique globally.
     * 
     * @param {string} customDomainName Name of the custom domain within an
     * endpoint.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    deleteMethod(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomDomain>): void;
    deleteMethod(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, callback: ServiceCallback<models.CustomDomain>): void;

    /**
     * Deletes an existing CDN custom domain within an endpoint.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     * 
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     * 
     * @param {string} endpointName Name of the endpoint under the profile which
     * is unique globally.
     * 
     * @param {string} customDomainName Name of the custom domain within an
     * endpoint.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginDeleteMethod(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomDomain>): void;
    beginDeleteMethod(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, callback: ServiceCallback<models.CustomDomain>): void;

    /**
     * Lists the existing CDN custom domains within an endpoint.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listByEndpointNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomDomainListResult>): void;
    listByEndpointNext(nextPageLink: string, callback: ServiceCallback<models.CustomDomainListResult>): void;
}
